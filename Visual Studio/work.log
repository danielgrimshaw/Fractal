                                Log
05/11/2015:
	1) I programmed the common code of the fractal package and fixed the
	coloring of Mandelbrot.
	2) Tomorrow I would like to finish Image.
	3) I found it surprising that I had to use different algorithms for
	coloring the Julia and Mandelbrot sets.

05/12/2015:
	1) I started work on Image.
	2) Tomorrow I would like to finally finish Image.
	3) I found that I had added an extra space between main and its
	arguments in Mandelbrot and Julia.

05/14/2015:
	1) Worked on fixing compilation problems with OpenGL.
	2) Tomorrow I would like to finally finish Image.
	3) You cannot cross compile from headless Linux to windows with
	openGL.

05/18/2015:
	1) Today I successfully compiled and ran an OpenGL window. Currently
	it is only capable of changing the entire background at once, but I
	am currently working on learning how to draw on the canvas itself.
	2) Tomorrow I would like to get the OpenGL context capable of
	drawing two dimensional shapes.
	3) OpenGL itself does not actually implement a windowing system. I
	had to use GLFW3 along with it. My code also does not actually know
	where any of the graphics related functions are at compile time.

05/20/2015:
	1) Today I finally got the output working in the window. I was
	supposed to have the algorithms completed for drawing the fractals,
	but that ended up being too much.
	2) Tomorrow I would like to implement the fractals as fragment
	shaders. I will need to look up exactly how fragment shaders work,
	but I think that it will work better with fragment shaders than with
	vertex shaders.
	3) It takes about fifty lines of code just to draw a flat shaded
	orange triangle.

5/21/2015:
	1) Today I wrote a class for shader programs. I will need to rewrite
	the current version of window.cpp to use this Shader class
	(partially complete already).
	2) Rewrite window.cpp and shaders to use the Shader class.
	3) After writing Shader, it only takes five lines to use any shader.
	
5/26/2015:
	1) Today I wrote a util program to implement all functions in. I
	have given up with object orientation after many errors. I wrote a
	lot of code today.
	2) Tomorrow I plan to finish all of the shader programs.
	3) This code is starting to look more and more like C code.

5/27/2015:
	1) I changed all of the code to C after annoying errors. This fixed
	all of the errors. Unfortunately, Visual Studio was not happy with
	the change of language, and is now throwing a runtime exception.
	2) Tomorrow I need to fix that exception. It is probably a
	segmentation fault in disguise. It shouldn't be too hard to fix.
	3) Visual studio is quite a good IDE actually. To change the
	language all I had to do was change the file extension. Then
	everything automatically changed for me. All the errors were gone!

5/28/2015:
	1) I found out what that exception was. Turns out Visual Studio is
	not so good at changing language after all. It is a potential
	runtime error dectected by Visual Studio. It wants me to catch the
	error. Unfortunately, C predates the invention of try {} catch {}
	clauses. Therefore I changed back to C++.
	2) Tomorrow I will need to finish the switch back into C++. I expect
	that will take about 5-6 hours to do.
	3) Nobody has invented a way for C to do exception handling yet.
	Visual Studio also should realize that there is no way to handle an
	exception in C.

5/29/2015:
	1) Today I finished reprogramming the entire project so far into C++
	again.
	2) Tomorrow I will work on programming a shader for the Julia fractal.
	3) Visual Studio can not pass copies of C++ objects.
